%tr{ :class => [claim.canceled? && 'gray_back', cycle("odd", "even")] }
  %td= link_to claim.id, edit_claim_path(claim), :class => 'id_link'
  %td= l( claim.reservation_date, :format => :default )
  %td{ :title => claim.tourist_stat }
    = truncate(claim.tourist_stat, :length => 4)
  - manager_names = claim.user.try(:full_name).to_s + (", #{claim.assistant.try(:full_name)}" if claim.assistant.present?).to_s
  - if show_office
    %td{ :title => manager_names, :class => 'user_cell', :style => claim.user.try(:color) && "background-color: #{claim.user.try(:color)};" }
      = truncate(claim.user.try(:login), :length => 8)
    %td{ :title => claim.office.name }
      = truncate(claim.office.name, :length => 8)
  - else
    %td{ :title => manager_names, :class => 'user_cell', :style => claim.user.try(:color) && "background-color: #{claim.user.try(:color)};" }
      = truncate(claim.user.try(:login), :length => 8)
  %td{ :title => tourists_list(claim) }
    = truncate(claim.applicant.try(:initials_name), :length => 8)
  %td{ :title => claim.applicant.try(:phone_number) }
    = text_value truncate(claim.applicant.try(:phone_number), :length => 10)
  %td{ :class => color_for_flight(claim) }
    %span{ :title => l(claim.depart_to, :format => :long) }
      = text_value l( claim.depart_to, :format => :short_date )
  %td
    %span{ :title => l(claim.depart_back, :format => :long) }
      = text_value l( claim.depart_back, :format => :short_date )
  %td{ :title => claim.country.try(:name) }
    = text_value truncate(claim.country.try(:name), :length => 8)
  %td{ :title => claim.city.try(:name) }
    = text_value truncate(claim.city.try(:name), :length => 6)
  %td{ :class => (!claim.canceled? && claim.visa_confirmation_flag) && claim.visa }
    %span{ :title => l( claim.visa_check, :format => :short ) }
      = text_value l( claim.visa_check, :format => :short )
  %td{ :title => text_for_visa(claim) }
    = text_for_visa(claim)
  %td{ :title => claim.operator.try(:name) }
    = truncate(claim.operator.try(:name), :length => 8)
  %td{ :title => claim.operator_confirmation, :class => !claim.canceled? && !claim.operator_confirmation_flag && 'red_back' }
    = truncate(claim.operator_confirmation, :length => 10)
  %td{ :title => claim.primary_currency_price.to_money }
    = claim.primary_currency_price.to_money
  %td{ :title => claim.calculation }
    = truncate(claim.calculation, :length => 8)
  %td{ :title => claim.tourist_advance.to_money, :class => color_for_tourist_advance(claim)}
    = claim.tourist_advance.to_money
  %td{ :title => claim.tourist_debt.to_money, :class => color_for_tourist_advance(claim) }
    = claim.tourist_debt.to_money
  %td{ :class => color_for_operator_price(claim), :title => (claim.operator_price > 0) && "#{claim.operator_price_currency.upcase}: #{claim.operator_price.to_money}" }
    = operator_price(claim)
  %td{ :title => l(claim.operator_maturity, :format => :short) }
    = l( claim.operator_maturity, :format => :short )
  %td{ :title => claim.operator_advance.to_money }
    = operator_advance(claim)
  %td{ :title => claim.operator_debt.to_money, :class => color_for_operator_debt(claim) }
    = operator_debt(claim)
  - if show_accountant_columns
    %td.thick_border.buh_col= approved_advance(claim, :tourist)
    %td.buh_col= approved_advance(claim, :operator_prim)
    %td.buh_col= approved_advance(claim, :operator)
    %td.buh_col{ :class => claim.profit < 0 && !claim.excluded_from_profit && 'red_back', :title => profit_tooltip(claim) }= claim.profit.to_money
    %td.buh_col= claim.profit_in_percent.to_percent unless claim.excluded_from_profit
    - if show_bonus_columns
      %td.bonus_percent.buh_col= best_in_place claim, :bonus_percent, :path => update_bonus_claims_path(claim),
        :display_with => lambda {|b| b.to_percent.html_safe }
      %td.bonus.buh_col= claim.bonus.to_money
  %td{ :title => t('claims.documents_statuses.' << claim.documents_status), :class => [!claim.canceled? && claim.documents_status, show_accountant_columns && 'thick_border'] }
    = t('claims.documents_statuses.' << claim.documents_status)
  %td{ :class => (!claim.memo_tasks_done and claim.memo != '') && 'red_back', :title => claim.memo }
    = truncate(claim.memo, :length => 8)
  %td{ :title => l( claim.check_date, :format => :default ), :class => check_date_status(claim) }
    = l( claim.check_date, :format => :default )
  %td.docs_note{ :title => claim.docs_note }
    %span{ :class => !claim.docs_note.empty? && 'attention' }
  %td
    = link_to '', edit_claim_path(claim), :class => 'edit_row'