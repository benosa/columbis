.claims
  %table#claims{ :rules => 'all'}
    %tr
      %th= sortable 'id', t('claims.index.num')
      %th= sortable 'reservation_date', t('claims.index.reservation_date')
      %th.medium= sortable 'tourist_stat', t('claims.index.tourist_stat')
      %th= sortable 'user_id', t('claims.index.manager')
      %th.w85px= sortable 'applicant.last_name', t('claims.index.full_name')
      %th= t('claims.index.phone_number')
      %th.medium= sortable 'depart_to', t('claims.index.depart_to')
      %th.medium= sortable 'depart_back', t('claims.index.depart_back')
      %th= sortable 'countries.name', t('claims.index.to')
      %th.medium= sortable 'airport_back', t('claims.index.from')
      %th= sortable 'visa', t('claims.index.visa')
      %th.short_date= sortable 'visa_check', t('claims.index.term')
      %th= sortable 'operators.name', t('claims.index.operator')
      %th= sortable 'operator_confirmation', t('claims.index.operator_confirmation')
      %th= sortable 'primary_currency_price', t('claims.index.price')
      %th.medium= sortable 'calculation', t('claims.index.calculation')
      %th= sortable 'tourist_advance', t('claims.index.advance')
      %th= sortable 'tourist_debt', t('claims.index.debt')
      %th.thick_border= sortable 'operator_price', t('claims.index.operator_price')
      %th.short_date= sortable 'operator_maturity', t('claims.index.operator_payment_term')
      %th= sortable 'operator_advance', t('claims.index.operator_paid')
      %th= sortable 'operator_debt', t('claims.index.operator_debt')
      - if params[:list_type] == 'accountant_list'
        %th.thick_border.green_back= sortable 'approved_tourist_advance', t('claims.index.advance')
        %th.green_back= sortable 'approved_operator_advance', t('claims.index.operator_paid')
        %th.green_back= sortable 'profit', 'Наценка'
        %th.green_back= sortable 'profit_in_percent', '% наценки'
      %th.thick_border= sortable 'docs_ticket', t('claims.index.docs')
      %th= sortable 'docs_note', t('claims.index.memo')
      %th= sortable 'check_date', t('claims.index.check_date')
      %th.w36px
      %th.w36px
    - @claims.each do |claim|
      %tr{ :class => claim.canceled? && 'gray_back' }
        %td= claim.id
        %td= l( claim.reservation_date, :format => :default )
        %td{ :full_value => claim.tourist_stat }
          = truncate(claim.tourist_stat, :length => 10)
        %td{ :style => "background-color:#{claim.user.color}" }
          = claim.user.login
        %td{ :full_value => tourists_list(claim) }
          = truncate(claim.applicant.try(:initials_name), :length => 12)
        %td{ :full_value => claim.applicant.try(:phone_number) }
          = truncate(claim.applicant.try(:phone_number), :length => 10)
        %td{ :class => color_for_flight(claim)}
          = l( claim.depart_to, :format => :short )
        %td
          = l( claim.depart_back, :format => :short )
        %td{ :full_value => claim.country.try(:name) }
          = truncate(claim.country.try(:name), :length => 10)
        %td{ :full_value => claim.city.try(:name) }
          = truncate(claim.city.try(:name), :length => 10)
        %td{ :class => !claim.canceled? && claim.visa }
          = text_for_visa(claim)
        %td{ :class => !claim.canceled? && claim.visa }
          = l( claim.visa_check, :format => :short )
        %td= claim.operator.try(:name)
        %td{ :class => !claim.canceled? && !claim.operator_confirmation_flag && 'red_back', :full_value => claim.operator_confirmation }
          = truncate(claim.operator_confirmation, :length => 10)
        %td= claim.primary_currency_price.to_money
        %td{ :full_value => claim.calculation }
          = truncate(claim.calculation, :length => 12)
        %td{ :class => color_for_tourist_advance(claim)}
          = claim.tourist_advance.to_money
        %td{ :class => !claim.canceled? && color_for_tourist_advance(claim) }
          = claim.tourist_debt.to_money
        %td.thick_border{ :class => !claim.canceled? && color_for_operator_debt(claim), :full_value => (claim.operator_price > 0) && "#{claim.operator_price_currency.upcase}: #{claim.operator_price.to_money}" }
          = truncate(operator_price(claim), :length => 6) if claim.operator_price > 0
        %td= l( claim.operator_maturity, :format => :short )
        %td{ :class =>  !claim.canceled? && color_for_operator_advance(claim) }
          = claim.operator_advance.to_money
        %td{ :class =>  (!claim.canceled? && claim.operator_debt != 0) && 'red_back' }
          = claim.operator_debt.to_money
        - if params[:list_type] == 'accountant_list'
          %td.thick_border= approved_advance(claim, :tourist)
          %td= approved_advance(claim, :operator)
          %td= claim.profit.to_money
          %td= claim.profit_in_percent.to_percent
        %td.thick_border{ :class => !claim.canceled? && claim.documents_status }
          = t('claims.form.documents_statuses.' << claim.documents_status)
        %td{ :class => (!claim.memo_tasks_done and claim.memo != '') && 'red_back', :full_value => claim.memo }
          = truncate(claim.memo, :length => 10)
        %td{ :class => check_date_status(claim) }
          = l( claim.check_date, :format => :default )
        %td{ :full_value => claim.docs_note }
          %strong= '!' unless claim.docs_note.empty?
        %td
          = link_to edit_claim_path(claim) do
            = image_tag 'edit_icon.png', :title => t('edit')
          -if can? :destroy, claim
            = link_to claim, :confirm => t('are_you_sure'), :method => :delete do
              = image_tag 'delete_icon.png', :title => t('destroy')

  = will_paginate @claims
