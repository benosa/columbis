- form_options = current_company.dropdown_for('form').collect{|o| [ o.value, o.value ]}
- approved_disabled = !(is_admin? or is_boss? or is_accountant?)
#payments_out.payments_out_block.payments.form_block.green_block{ :data => { :form_options => form_options, :approved_disabled => approved_disabled } }
  .block_title.with_fields
    %h2= t('.payments_out')
    .rates
      %p= f.label :operator_maturity, t('activerecord.attributes.claim.maturity'), :required => claim.operator_confirmation_flag
      = f.text_field :operator_maturity, :class => 'datepicker date expires_date', :value => l(claim.operator_maturity, :format => :long), :required => claim.operator_confirmation_flag, :wrapper => false
    .rates
      %p= f.label :operator_price
      = f.text_field :operator_price, :class => 'number_visas', :wrapper => false
      = f.select :operator_price_currency, (CurrencyCourse::CURRENCIES).collect { |o| [t(o.upcase), o] }, {}, :class => 'price_select', :wrapper => false
  .form_block_content
    - if f.object.new_record?
      .fake_row
        %label= "#{t('.can_edit_payment_after_save')}"
    - ind = 0
    = f.fields_for :payments_out, :highlight_only => [:amount], :wrapper => true do |pof|
      - payment_out = pof.object
      - disabled = @claim.new_record? || payment_out.approved
      .fake_row.fields{ :id => "payment_out_#{ind}", :class => [payment_out.new_record? && 'new_record', disabled && 'disabled', payment_out._destroy && 'destroyed'] }
        .clearfix
          .col-actions
            .delete-wrap
              = link_to '', '#', :class => 'delete', :title => t('delete'), data: { check: t('are_you_sure') }
          .col-main.clearfix
            .fake_col.col1
              .block-left
                .two_line
                  %p= pof.label :date_in, t('.date')
                  = pof.text_field :date_in, :class => 'datepicker date_in date', :value => l(payment_out.date_in, :format => :long), :readonly => disabled
              .block-stretch
                .two_line
                  %p= pof.label :amount, t('.paid')
                  %label.operator_currency= t('rur')
                  = pof.text_field :amount, :class => "amount", :readonly => disabled, wrapper: { class: 'amount-input-wrap' }
            .fake_col.col2
              .block-left
                .two_line
                  %p= pof.label :course, t('.course')
                  = pof.text_field :course, :class => 'course date', :readonly => disabled
              .block-stretch
                .two_line
                  %p= pof.label :amount_prim, t('.paid')
                  %label.amount_prim_currency= t(claim.operator_price_currency.upcase)
                  = pof.text_field :amount_prim, :class => 'amount_prim paid', :readonly => disabled, wrapper: { class: 'amount-input-wrap' }
            .fake_col.col3
              .two_line
                %p= pof.label :form, t('.paid_type')
                .approved-wrap
                  = pof.label :approved, '&nbsp;'.html_safe, :class => 'checkbox approved_label', :title => Payment.human_attribute_name(:approved)
                  = pof.check_box :approved, :class => 'approved', :readonly => @claim.new_record? || approved_disabled
                = pof.select :form, form_options, { :include_blank => t('nope') }, :class => 'form-select', :readonly => disabled, wrapper: { class: 'form-select-wrap' }
        = pof.hidden_field :_destroy, :class => '_destroy'
        = pof.hidden_field :id, :class => 'payment_id'
      - ind += 1

      .fake_row.add_row.add_paying
        .add_btn.paying
          - if claim.new_record?
            %span{ :class => 'add_tourist', :title => t('.save_before_pay') }= t('.add_another_payment')
          - else
            = link_to t('.add_another_payment'), '#', :class => 'add add_tourist'
        .two_line.pull-right
          %strong= f.label :operator_debt, t('.operator_debt_short')
          = f.text_field :operator_debt, :disabled => true, :readonly => true, :class => 'credit text_right important', wrapper: false
          %label.operator_currency.operator_debt_currency= t(claim.operator_price_currency.upcase)
        .two_line.small_margin.pull-right
          = f.label :operator_price
          = f.text_field :operator_price, :class => 'number_visas', wrapper: false
          = f.select :operator_price_currency, currency_courses_for_select, {}, :class => 'price_select', wrapper: false