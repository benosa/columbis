indexer
{
}

searchd
{
  listen = 127.0.0.1:9314
  log = /home/zammer/workspace/devmen_tourism/log/searchd.log
  query_log = /home/zammer/workspace/devmen_tourism/log/searchd.query.log
  pid_file = /home/zammer/workspace/devmen_tourism/log/searchd.test.pid
}

source address_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "addresses" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "addresses"."id" * 7::INT8 + 0 AS "id" , "addresses"."region" AS "region", "addresses"."house_number" AS "house_number", "addresses"."housing" AS "housing", "addresses"."office_number" AS "office_number", "addresses"."street" AS "street", "addresses"."phone_number" AS "phone_number", "addresses"."joint_address" AS "joint_address", "addresses"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 3270727197 AS "class_crc", COALESCE('Address', '') AS "sphinx_internal_class", COALESCE("addresses"."region", '') AS "region_sort", COALESCE("addresses"."house_number", '') AS "house_number_sort", COALESCE("addresses"."housing", '') AS "housing_sort", COALESCE("addresses"."office_number", '') AS "office_number_sort", COALESCE("addresses"."street", '') AS "street_sort", COALESCE("addresses"."phone_number", '') AS "phone_number_sort", COALESCE("addresses"."joint_address", '') AS "joint_address_sort", "addresses"."zip_code" AS "zip_code", "addresses"."company_id" AS "company_id" FROM "addresses"  WHERE ("addresses"."id" >= $start AND "addresses"."id" <= $end AND "addresses"."delta" = FALSE) GROUP BY "addresses"."id", "addresses"."region", "addresses"."house_number", "addresses"."housing", "addresses"."office_number", "addresses"."street", "addresses"."phone_number", "addresses"."joint_address", "addresses"."id", "addresses"."region", "addresses"."house_number", "addresses"."housing", "addresses"."office_number", "addresses"."street", "addresses"."phone_number", "addresses"."joint_address", "addresses"."zip_code", "addresses"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "addresses" WHERE "addresses"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = zip_code
  sql_attr_uint = company_id
  sql_attr_string = sphinx_internal_class
  sql_attr_string = region_sort
  sql_attr_string = house_number_sort
  sql_attr_string = housing_sort
  sql_attr_string = office_number_sort
  sql_attr_string = street_sort
  sql_attr_string = phone_number_sort
  sql_attr_string = joint_address_sort
  sql_query_info = SELECT * FROM "addresses" WHERE "id" = (($id - 0) / 7)
}

index address_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/address_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = address_core_0
}

source address_delta_0 : address_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "addresses"."id" * 7::INT8 + 0 AS "id" , "addresses"."region" AS "region", "addresses"."house_number" AS "house_number", "addresses"."housing" AS "housing", "addresses"."office_number" AS "office_number", "addresses"."street" AS "street", "addresses"."phone_number" AS "phone_number", "addresses"."joint_address" AS "joint_address", "addresses"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 3270727197 AS "class_crc", COALESCE('Address', '') AS "sphinx_internal_class", COALESCE("addresses"."region", '') AS "region_sort", COALESCE("addresses"."house_number", '') AS "house_number_sort", COALESCE("addresses"."housing", '') AS "housing_sort", COALESCE("addresses"."office_number", '') AS "office_number_sort", COALESCE("addresses"."street", '') AS "street_sort", COALESCE("addresses"."phone_number", '') AS "phone_number_sort", COALESCE("addresses"."joint_address", '') AS "joint_address_sort", "addresses"."zip_code" AS "zip_code", "addresses"."company_id" AS "company_id" FROM "addresses"  WHERE ("addresses"."id" >= $start AND "addresses"."id" <= $end AND "addresses"."delta" = TRUE) GROUP BY "addresses"."id", "addresses"."region", "addresses"."house_number", "addresses"."housing", "addresses"."office_number", "addresses"."street", "addresses"."phone_number", "addresses"."joint_address", "addresses"."id", "addresses"."region", "addresses"."house_number", "addresses"."housing", "addresses"."office_number", "addresses"."street", "addresses"."phone_number", "addresses"."joint_address", "addresses"."zip_code", "addresses"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "addresses" WHERE "addresses"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = zip_code
  sql_attr_uint = company_id
  sql_attr_string = sphinx_internal_class
  sql_attr_string = region_sort
  sql_attr_string = house_number_sort
  sql_attr_string = housing_sort
  sql_attr_string = office_number_sort
  sql_attr_string = street_sort
  sql_attr_string = phone_number_sort
  sql_attr_string = joint_address_sort
  sql_query_info = SELECT * FROM "addresses" WHERE "id" = (($id - 0) / 7)
}

index address_delta : address_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/address_delta
  source = address_delta_0
}

index address
{
  type = distributed
  local = address_delta
  local = address_core
}

source claim_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "claims" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "claims"."id" * 7::INT8 + 1 AS "id" , "claims"."airport_to" AS "airport_to", "claims"."airport_back" AS "airport_back", "claims"."visa" AS "visa", "claims"."calculation" AS "calculation", "claims"."documents_status" AS "documents_status", "claims"."docs_note" AS "docs_note", "claims"."flight_to" AS "flight_to", "claims"."flight_back" AS "flight_back", "claims"."meals" AS "meals", "claims"."placement" AS "placement", "claims"."tourist_stat" AS "tourist_stat", "claims"."hotel" AS "hotel", "claims"."memo" AS "memo", "claims"."transfer" AS "transfer", "claims"."relocation" AS "relocation", "claims"."service_class" AS "service_class", "claims"."additional_services" AS "additional_services", "claims"."operator_confirmation" AS "operator_confirmation", "offices"."name" AS "office", "operators"."name" AS "operator", "countries"."name" AS "country", "cities"."name" AS "city", "resorts_claims"."name" AS "resort", "users"."login" AS "user", "assistants_claims"."login" AS "assistant", array_to_string(array_agg(COALESCE(CAST(COALESCE("tourists"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("tourists"."first_name"::varchar, '') as varchar), '0')), ' ') AS "dependents", CAST(COALESCE("applicants_claims"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("applicants_claims"."first_name"::varchar, '') as varchar) AS "applicant", "applicants_claims"."phone_number" AS "phone_number", "claims"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 1722347811 AS "class_crc", COALESCE('Claim', '') AS "sphinx_internal_class", COALESCE("claims"."airport_to", '') AS "airport_to_sort", COALESCE("claims"."airport_back", '') AS "airport_back_sort", COALESCE("claims"."visa", '') AS "visa_sort", COALESCE("claims"."calculation", '') AS "calculation_sort", COALESCE("claims"."documents_status", '') AS "documents_status_sort", COALESCE("claims"."docs_note", '') AS "docs_note_sort", COALESCE("claims"."flight_to", '') AS "flight_to_sort", COALESCE("claims"."flight_back", '') AS "flight_back_sort", COALESCE("claims"."meals", '') AS "meals_sort", COALESCE("claims"."placement", '') AS "placement_sort", COALESCE("claims"."tourist_stat", '') AS "tourist_stat_sort", COALESCE("claims"."hotel", '') AS "hotel_sort", COALESCE("claims"."memo", '') AS "memo_sort", COALESCE("claims"."transfer", '') AS "transfer_sort", COALESCE("claims"."relocation", '') AS "relocation_sort", COALESCE("claims"."service_class", '') AS "service_class_sort", COALESCE("claims"."additional_services", '') AS "additional_services_sort", COALESCE("claims"."operator_confirmation", '') AS "operator_confirmation_sort", COALESCE("offices"."name", '') AS "office_sort", COALESCE("operators"."name", '') AS "operator_sort", COALESCE("countries"."name", '') AS "country_sort", COALESCE("cities"."name", '') AS "city_sort", COALESCE("resorts_claims"."name", '') AS "resort_sort", COALESCE("users"."login", '') AS "user_sort", COALESCE("assistants_claims"."login", '') AS "assistant_sort", array_to_string(array_agg(COALESCE(COALESCE("tourists"."last_name", '') || ' ' || COALESCE("tourists"."first_name", ''), '0')), ' ') AS "dependents_sort", COALESCE("applicants_claims"."last_name", '') || ' ' || COALESCE("applicants_claims"."first_name", '') AS "applicant_sort", COALESCE("applicants_claims"."phone_number", '') AS "phone_number_sort", "claims"."id" AS "id", "claims"."company_id" AS "company_id", "claims"."office_id" AS "office_id", "claims"."user_id" AS "user_id", "claims"."assistant_id" AS "assistant_id", cast(floor(extract(epoch from "claims"."reservation_date")) as bigint) AS "reservation_date", cast(floor(extract(epoch from "claims"."depart_to")) as bigint) AS "depart_to", cast(floor(extract(epoch from "claims"."depart_back")) as bigint) AS "depart_back", cast(floor(extract(epoch from "claims"."visa_check")) as bigint) AS "visa_check", cast(floor(extract(epoch from "claims"."check_date")) as bigint) AS "check_date", cast(floor(extract(epoch from "claims"."arrival_date")) as bigint) AS "arrival_date", cast(floor(extract(epoch from "claims"."departure_date")) as bigint) AS "departure_date", cast(floor(extract(epoch from "claims"."maturity")) as bigint) AS "maturity", cast(floor(extract(epoch from "claims"."operator_maturity")) as bigint) AS "operator_maturity", "claims"."operator_confirmation_flag" AS "operator_confirmation_flag", "claims"."primary_currency_price" AS "primary_currency_price", "claims"."tourist_advance" AS "tourist_advance", "claims"."tourist_debt" AS "tourist_debt", "claims"."operator_price" AS "operator_price", "claims"."operator_advance" AS "operator_advance", "claims"."operator_debt" AS "operator_debt", "claims"."approved_tourist_advance" AS "approved_tourist_advance", "claims"."approved_operator_advance" AS "approved_operator_advance", "claims"."approved_operator_advance_prim" AS "approved_operator_advance_prim", "claims"."profit" AS "profit", "claims"."profit_in_percent" AS "profit_in_percent", "claims"."bonus" AS "bonus", "claims"."bonus_percent" AS "bonus_percent" FROM "claims" LEFT OUTER JOIN "offices" ON "offices"."id" = "claims"."office_id" LEFT OUTER JOIN "operators" ON "operators"."id" = "claims"."operator_id" LEFT OUTER JOIN "countries" ON "countries"."id" = "claims"."country_id" LEFT OUTER JOIN "cities" ON "cities"."id" = "claims"."city_id" LEFT OUTER JOIN "cities" "resorts_claims" ON "resorts_claims"."id" = "claims"."resort_id" LEFT OUTER JOIN "users" ON "users"."id" = "claims"."user_id" LEFT OUTER JOIN "users" "assistants_claims" ON "assistants_claims"."id" = "claims"."assistant_id" LEFT OUTER JOIN "tourist_claims" ON "tourist_claims"."claim_id" = "claims"."id" AND "tourist_claims"."applicant" = 'f' LEFT OUTER JOIN "tourists" ON "tourists"."id" = "tourist_claims"."tourist_id" LEFT OUTER JOIN "tourist_claims" "tourist_claims_claims_join" ON "tourist_claims_claims_join"."claim_id" = "claims"."id" AND "tourist_claims_claims_join"."applicant" = 't' LEFT OUTER JOIN "tourists" "applicants_claims" ON "applicants_claims"."id" = "tourist_claims_claims_join"."tourist_id" WHERE ("claims"."id" >= $start AND "claims"."id" <= $end AND "claims"."delta" = FALSE) GROUP BY "claims"."id", "claims"."airport_to", "claims"."airport_back", "claims"."visa", "claims"."calculation", "claims"."documents_status", "claims"."docs_note", "claims"."flight_to", "claims"."flight_back", "claims"."meals", "claims"."placement", "claims"."tourist_stat", "claims"."hotel", "claims"."memo", "claims"."transfer", "claims"."relocation", "claims"."service_class", "claims"."additional_services", "claims"."operator_confirmation", "offices"."name", "operators"."name", "countries"."name", "cities"."name", "resorts_claims"."name", "users"."login", "assistants_claims"."login", "applicants_claims"."last_name", "applicants_claims"."first_name", "applicants_claims"."phone_number", "claims"."id", "claims"."airport_to", "claims"."airport_back", "claims"."visa", "claims"."calculation", "claims"."documents_status", "claims"."docs_note", "claims"."flight_to", "claims"."flight_back", "claims"."meals", "claims"."placement", "claims"."tourist_stat", "claims"."hotel", "claims"."memo", "claims"."transfer", "claims"."relocation", "claims"."service_class", "claims"."additional_services", "claims"."operator_confirmation", "offices"."name", "operators"."name", "countries"."name", "cities"."name", "resorts_claims"."name", "users"."login", "assistants_claims"."login", "applicants_claims"."last_name", "applicants_claims"."first_name", "applicants_claims"."phone_number", "claims"."id", "claims"."company_id", "claims"."office_id", "claims"."user_id", "claims"."assistant_id", "claims"."reservation_date", "claims"."depart_to", "claims"."depart_back", "claims"."visa_check", "claims"."check_date", "claims"."arrival_date", "claims"."departure_date", "claims"."maturity", "claims"."operator_maturity", "claims"."operator_confirmation_flag", "claims"."primary_currency_price", "claims"."tourist_advance", "claims"."tourist_debt", "claims"."operator_price", "claims"."operator_advance", "claims"."operator_debt", "claims"."approved_tourist_advance", "clai\
ms"."approved_operator_advance", "claims"."approved_operator_advance_prim", "claims"."profit", "claims"."profit_in_percent", "claims"."bonus", "claims"."bonus_percent"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "claims" WHERE "claims"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = id
  sql_attr_uint = company_id
  sql_attr_uint = office_id
  sql_attr_uint = user_id
  sql_attr_uint = assistant_id
  sql_attr_bool = operator_confirmation_flag
  sql_attr_timestamp = reservation_date
  sql_attr_timestamp = depart_to
  sql_attr_timestamp = depart_back
  sql_attr_timestamp = visa_check
  sql_attr_timestamp = check_date
  sql_attr_timestamp = arrival_date
  sql_attr_timestamp = departure_date
  sql_attr_timestamp = maturity
  sql_attr_timestamp = operator_maturity
  sql_attr_float = primary_currency_price
  sql_attr_float = tourist_advance
  sql_attr_float = tourist_debt
  sql_attr_float = operator_price
  sql_attr_float = operator_advance
  sql_attr_float = operator_debt
  sql_attr_float = approved_tourist_advance
  sql_attr_float = approved_operator_advance
  sql_attr_float = approved_operator_advance_prim
  sql_attr_float = profit
  sql_attr_float = profit_in_percent
  sql_attr_float = bonus
  sql_attr_float = bonus_percent
  sql_attr_string = sphinx_internal_class
  sql_attr_string = airport_to_sort
  sql_attr_string = airport_back_sort
  sql_attr_string = visa_sort
  sql_attr_string = calculation_sort
  sql_attr_string = documents_status_sort
  sql_attr_string = docs_note_sort
  sql_attr_string = flight_to_sort
  sql_attr_string = flight_back_sort
  sql_attr_string = meals_sort
  sql_attr_string = placement_sort
  sql_attr_string = tourist_stat_sort
  sql_attr_string = hotel_sort
  sql_attr_string = memo_sort
  sql_attr_string = transfer_sort
  sql_attr_string = relocation_sort
  sql_attr_string = service_class_sort
  sql_attr_string = additional_services_sort
  sql_attr_string = operator_confirmation_sort
  sql_attr_string = office_sort
  sql_attr_string = operator_sort
  sql_attr_string = country_sort
  sql_attr_string = city_sort
  sql_attr_string = resort_sort
  sql_attr_string = user_sort
  sql_attr_string = assistant_sort
  sql_attr_string = dependents_sort
  sql_attr_string = applicant_sort
  sql_attr_string = phone_number_sort
  sql_query_info = SELECT * FROM "claims" WHERE "id" = (($id - 1) / 7)
}

index claim_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/claim_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = claim_core_0
}

source claim_delta_0 : claim_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "claims"."id" * 7::INT8 + 1 AS "id" , "claims"."airport_to" AS "airport_to", "claims"."airport_back" AS "airport_back", "claims"."visa" AS "visa", "claims"."calculation" AS "calculation", "claims"."documents_status" AS "documents_status", "claims"."docs_note" AS "docs_note", "claims"."flight_to" AS "flight_to", "claims"."flight_back" AS "flight_back", "claims"."meals" AS "meals", "claims"."placement" AS "placement", "claims"."tourist_stat" AS "tourist_stat", "claims"."hotel" AS "hotel", "claims"."memo" AS "memo", "claims"."transfer" AS "transfer", "claims"."relocation" AS "relocation", "claims"."service_class" AS "service_class", "claims"."additional_services" AS "additional_services", "claims"."operator_confirmation" AS "operator_confirmation", "offices"."name" AS "office", "operators"."name" AS "operator", "countries"."name" AS "country", "cities"."name" AS "city", "resorts_claims"."name" AS "resort", "users"."login" AS "user", "assistants_claims"."login" AS "assistant", array_to_string(array_agg(COALESCE(CAST(COALESCE("tourists"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("tourists"."first_name"::varchar, '') as varchar), '0')), ' ') AS "dependents", CAST(COALESCE("applicants_claims"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("applicants_claims"."first_name"::varchar, '') as varchar) AS "applicant", "applicants_claims"."phone_number" AS "phone_number", "claims"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 1722347811 AS "class_crc", COALESCE('Claim', '') AS "sphinx_internal_class", COALESCE("claims"."airport_to", '') AS "airport_to_sort", COALESCE("claims"."airport_back", '') AS "airport_back_sort", COALESCE("claims"."visa", '') AS "visa_sort", COALESCE("claims"."calculation", '') AS "calculation_sort", COALESCE("claims"."documents_status", '') AS "documents_status_sort", COALESCE("claims"."docs_note", '') AS "docs_note_sort", COALESCE("claims"."flight_to", '') AS "flight_to_sort", COALESCE("claims"."flight_back", '') AS "flight_back_sort", COALESCE("claims"."meals", '') AS "meals_sort", COALESCE("claims"."placement", '') AS "placement_sort", COALESCE("claims"."tourist_stat", '') AS "tourist_stat_sort", COALESCE("claims"."hotel", '') AS "hotel_sort", COALESCE("claims"."memo", '') AS "memo_sort", COALESCE("claims"."transfer", '') AS "transfer_sort", COALESCE("claims"."relocation", '') AS "relocation_sort", COALESCE("claims"."service_class", '') AS "service_class_sort", COALESCE("claims"."additional_services", '') AS "additional_services_sort", COALESCE("claims"."operator_confirmation", '') AS "operator_confirmation_sort", COALESCE("offices"."name", '') AS "office_sort", COALESCE("operators"."name", '') AS "operator_sort", COALESCE("countries"."name", '') AS "country_sort", COALESCE("cities"."name", '') AS "city_sort", COALESCE("resorts_claims"."name", '') AS "resort_sort", COALESCE("users"."login", '') AS "user_sort", COALESCE("assistants_claims"."login", '') AS "assistant_sort", array_to_string(array_agg(COALESCE(COALESCE("tourists"."last_name", '') || ' ' || COALESCE("tourists"."first_name", ''), '0')), ' ') AS "dependents_sort", COALESCE("applicants_claims"."last_name", '') || ' ' || COALESCE("applicants_claims"."first_name", '') AS "applicant_sort", COALESCE("applicants_claims"."phone_number", '') AS "phone_number_sort", "claims"."id" AS "id", "claims"."company_id" AS "company_id", "claims"."office_id" AS "office_id", "claims"."user_id" AS "user_id", "claims"."assistant_id" AS "assistant_id", cast(floor(extract(epoch from "claims"."reservation_date")) as bigint) AS "reservation_date", cast(floor(extract(epoch from "claims"."depart_to")) as bigint) AS "depart_to", cast(floor(extract(epoch from "claims"."depart_back")) as bigint) AS "depart_back", cast(floor(extract(epoch from "claims"."visa_check")) as bigint) AS "visa_check", cast(floor(extract(epoch from "claims"."check_date")) as bigint) AS "check_date", cast(floor(extract(epoch from "claims"."arrival_date")) as bigint) AS "arrival_date", cast(floor(extract(epoch from "claims"."departure_date")) as bigint) AS "departure_date", cast(floor(extract(epoch from "claims"."maturity")) as bigint) AS "maturity", cast(floor(extract(epoch from "claims"."operator_maturity")) as bigint) AS "operator_maturity", "claims"."operator_confirmation_flag" AS "operator_confirmation_flag", "claims"."primary_currency_price" AS "primary_currency_price", "claims"."tourist_advance" AS "tourist_advance", "claims"."tourist_debt" AS "tourist_debt", "claims"."operator_price" AS "operator_price", "claims"."operator_advance" AS "operator_advance", "claims"."operator_debt" AS "operator_debt", "claims"."approved_tourist_advance" AS "approved_tourist_advance", "claims"."approved_operator_advance" AS "approved_operator_advance", "claims"."approved_operator_advance_prim" AS "approved_operator_advance_prim", "claims"."profit" AS "profit", "claims"."profit_in_percent" AS "profit_in_percent", "claims"."bonus" AS "bonus", "claims"."bonus_percent" AS "bonus_percent" FROM "claims" LEFT OUTER JOIN "offices" ON "offices"."id" = "claims"."office_id" LEFT OUTER JOIN "operators" ON "operators"."id" = "claims"."operator_id" LEFT OUTER JOIN "countries" ON "countries"."id" = "claims"."country_id" LEFT OUTER JOIN "cities" ON "cities"."id" = "claims"."city_id" LEFT OUTER JOIN "cities" "resorts_claims" ON "resorts_claims"."id" = "claims"."resort_id" LEFT OUTER JOIN "users" ON "users"."id" = "claims"."user_id" LEFT OUTER JOIN "users" "assistants_claims" ON "assistants_claims"."id" = "claims"."assistant_id" LEFT OUTER JOIN "tourist_claims" ON "tourist_claims"."claim_id" = "claims"."id" AND "tourist_claims"."applicant" = 'f' LEFT OUTER JOIN "tourists" ON "tourists"."id" = "tourist_claims"."tourist_id" LEFT OUTER JOIN "tourist_claims" "tourist_claims_claims_join" ON "tourist_claims_claims_join"."claim_id" = "claims"."id" AND "tourist_claims_claims_join"."applicant" = 't' LEFT OUTER JOIN "tourists" "applicants_claims" ON "applicants_claims"."id" = "tourist_claims_claims_join"."tourist_id" WHERE ("claims"."id" >= $start AND "claims"."id" <= $end AND "claims"."delta" = TRUE) GROUP BY "claims"."id", "claims"."airport_to", "claims"."airport_back", "claims"."visa", "claims"."calculation", "claims"."documents_status", "claims"."docs_note", "claims"."flight_to", "claims"."flight_back", "claims"."meals", "claims"."placement", "claims"."tourist_stat", "claims"."hotel", "claims"."memo", "claims"."transfer", "claims"."relocation", "claims"."service_class", "claims"."additional_services", "claims"."operator_confirmation", "offices"."name", "operators"."name", "countries"."name", "cities"."name", "resorts_claims"."name", "users"."login", "assistants_claims"."login", "applicants_claims"."last_name", "applicants_claims"."first_name", "applicants_claims"."phone_number", "claims"."id", "claims"."airport_to", "claims"."airport_back", "claims"."visa", "claims"."calculation", "claims"."documents_status", "claims"."docs_note", "claims"."flight_to", "claims"."flight_back", "claims"."meals", "claims"."placement", "claims"."tourist_stat", "claims"."hotel", "claims"."memo", "claims"."transfer", "claims"."relocation", "claims"."service_class", "claims"."additional_services", "claims"."operator_confirmation", "offices"."name", "operators"."name", "countries"."name", "cities"."name", "resorts_claims"."name", "users"."login", "assistants_claims"."login", "applicants_claims"."last_name", "applicants_claims"."first_name", "applicants_claims"."phone_number", "claims"."id", "claims"."company_id", "claims"."office_id", "claims"."user_id", "claims"."assistant_id", "claims"."reservation_date", "claims"."depart_to", "claims"."depart_back", "claims"."visa_check", "claims"."check_date", "claims"."arrival_date", "claims"."departure_date", "claims"."maturity", "claims"."operator_maturity", "claims"."operator_confirmation_flag", "claims"."primary_currency_price", "claims"."tourist_advance", "claims"."tourist_debt", "claims"."operator_price", "claims"."operator_advance", "claims"."operator_debt", "claims"."approved_tourist_advance", "claim\
s"."approved_operator_advance", "claims"."approved_operator_advance_prim", "claims"."profit", "claims"."profit_in_percent", "claims"."bonus", "claims"."bonus_percent"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "claims" WHERE "claims"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = id
  sql_attr_uint = company_id
  sql_attr_uint = office_id
  sql_attr_uint = user_id
  sql_attr_uint = assistant_id
  sql_attr_bool = operator_confirmation_flag
  sql_attr_timestamp = reservation_date
  sql_attr_timestamp = depart_to
  sql_attr_timestamp = depart_back
  sql_attr_timestamp = visa_check
  sql_attr_timestamp = check_date
  sql_attr_timestamp = arrival_date
  sql_attr_timestamp = departure_date
  sql_attr_timestamp = maturity
  sql_attr_timestamp = operator_maturity
  sql_attr_float = primary_currency_price
  sql_attr_float = tourist_advance
  sql_attr_float = tourist_debt
  sql_attr_float = operator_price
  sql_attr_float = operator_advance
  sql_attr_float = operator_debt
  sql_attr_float = approved_tourist_advance
  sql_attr_float = approved_operator_advance
  sql_attr_float = approved_operator_advance_prim
  sql_attr_float = profit
  sql_attr_float = profit_in_percent
  sql_attr_float = bonus
  sql_attr_float = bonus_percent
  sql_attr_string = sphinx_internal_class
  sql_attr_string = airport_to_sort
  sql_attr_string = airport_back_sort
  sql_attr_string = visa_sort
  sql_attr_string = calculation_sort
  sql_attr_string = documents_status_sort
  sql_attr_string = docs_note_sort
  sql_attr_string = flight_to_sort
  sql_attr_string = flight_back_sort
  sql_attr_string = meals_sort
  sql_attr_string = placement_sort
  sql_attr_string = tourist_stat_sort
  sql_attr_string = hotel_sort
  sql_attr_string = memo_sort
  sql_attr_string = transfer_sort
  sql_attr_string = relocation_sort
  sql_attr_string = service_class_sort
  sql_attr_string = additional_services_sort
  sql_attr_string = operator_confirmation_sort
  sql_attr_string = office_sort
  sql_attr_string = operator_sort
  sql_attr_string = country_sort
  sql_attr_string = city_sort
  sql_attr_string = resort_sort
  sql_attr_string = user_sort
  sql_attr_string = assistant_sort
  sql_attr_string = dependents_sort
  sql_attr_string = applicant_sort
  sql_attr_string = phone_number_sort
  sql_query_info = SELECT * FROM "claims" WHERE "id" = (($id - 1) / 7)
}

index claim_delta : claim_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/claim_delta
  source = claim_delta_0
}

index claim
{
  type = distributed
  local = claim_delta
  local = claim_core
}

source dropdown_value_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "dropdown_values" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "dropdown_values"."id" * 7::INT8 + 2 AS "id" , "dropdown_values"."list" AS "list", "dropdown_values"."value" AS "value", "dropdown_values"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 2260019119 AS "class_crc", COALESCE('DropdownValue', '') AS "sphinx_internal_class", COALESCE("dropdown_values"."list", '') AS "list_sort", COALESCE("dropdown_values"."value", '') AS "value_sort", "dropdown_values"."common" AS "common", "dropdown_values"."company_id" AS "company_id" FROM "dropdown_values"  WHERE ("dropdown_values"."id" >= $start AND "dropdown_values"."id" <= $end AND "dropdown_values"."delta" = FALSE) GROUP BY "dropdown_values"."id", "dropdown_values"."list", "dropdown_values"."value", "dropdown_values"."id", "dropdown_values"."list", "dropdown_values"."value", "dropdown_values"."common", "dropdown_values"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "dropdown_values" WHERE "dropdown_values"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_bool = common
  sql_attr_string = sphinx_internal_class
  sql_attr_string = list_sort
  sql_attr_string = value_sort
  sql_query_info = SELECT * FROM "dropdown_values" WHERE "id" = (($id - 2) / 7)
}

index dropdown_value_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/dropdown_value_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = dropdown_value_core_0
}

source dropdown_value_delta_0 : dropdown_value_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "dropdown_values"."id" * 7::INT8 + 2 AS "id" , "dropdown_values"."list" AS "list", "dropdown_values"."value" AS "value", "dropdown_values"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 2260019119 AS "class_crc", COALESCE('DropdownValue', '') AS "sphinx_internal_class", COALESCE("dropdown_values"."list", '') AS "list_sort", COALESCE("dropdown_values"."value", '') AS "value_sort", "dropdown_values"."common" AS "common", "dropdown_values"."company_id" AS "company_id" FROM "dropdown_values"  WHERE ("dropdown_values"."id" >= $start AND "dropdown_values"."id" <= $end AND "dropdown_values"."delta" = TRUE) GROUP BY "dropdown_values"."id", "dropdown_values"."list", "dropdown_values"."value", "dropdown_values"."id", "dropdown_values"."list", "dropdown_values"."value", "dropdown_values"."common", "dropdown_values"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "dropdown_values" WHERE "dropdown_values"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_bool = common
  sql_attr_string = sphinx_internal_class
  sql_attr_string = list_sort
  sql_attr_string = value_sort
  sql_query_info = SELECT * FROM "dropdown_values" WHERE "id" = (($id - 2) / 7)
}

index dropdown_value_delta : dropdown_value_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/dropdown_value_delta
  source = dropdown_value_delta_0
}

index dropdown_value
{
  type = distributed
  local = dropdown_value_delta
  local = dropdown_value_core
}

source operator_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "operators" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "operators"."id" * 7::INT8 + 3 AS "id" , "operators"."name" AS "name", "operators"."register_number" AS "register_number", "operators"."register_series" AS "register_series", "operators"."inn" AS "inn", "operators"."ogrn" AS "ogrn", "addresses"."joint_address" AS "joint_address", "operators"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 785434071 AS "class_crc", COALESCE('Operator', '') AS "sphinx_internal_class", COALESCE("operators"."name", '') AS "name_sort", COALESCE("operators"."register_number", '') AS "register_number_sort", COALESCE("operators"."register_series", '') AS "register_series_sort", COALESCE("operators"."inn", '') AS "inn_sort", COALESCE("operators"."ogrn", '') AS "ogrn_sort", COALESCE("addresses"."joint_address", '') AS "joint_address_sort", "operators"."company_id" AS "company_id" FROM "operators" LEFT OUTER JOIN "addresses" ON "addresses"."addressable_id" = "operators"."id" AND "addresses"."addressable_type" = 'Operator' WHERE ("operators"."id" >= $start AND "operators"."id" <= $end AND "operators"."delta" = FALSE) GROUP BY "operators"."id", "operators"."name", "operators"."register_number", "operators"."register_series", "operators"."inn", "operators"."ogrn", "addresses"."joint_address", "operators"."id", "operators"."name", "operators"."register_number", "operators"."register_series", "operators"."inn", "operators"."ogrn", "addresses"."joint_address", "operators"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "operators" WHERE "operators"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_string = sphinx_internal_class
  sql_attr_string = name_sort
  sql_attr_string = register_number_sort
  sql_attr_string = register_series_sort
  sql_attr_string = inn_sort
  sql_attr_string = ogrn_sort
  sql_attr_string = joint_address_sort
  sql_query_info = SELECT * FROM "operators" WHERE "id" = (($id - 3) / 7)
}

index operator_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/operator_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = operator_core_0
}

source operator_delta_0 : operator_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "operators"."id" * 7::INT8 + 3 AS "id" , "operators"."name" AS "name", "operators"."register_number" AS "register_number", "operators"."register_series" AS "register_series", "operators"."inn" AS "inn", "operators"."ogrn" AS "ogrn", "addresses"."joint_address" AS "joint_address", "operators"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 785434071 AS "class_crc", COALESCE('Operator', '') AS "sphinx_internal_class", COALESCE("operators"."name", '') AS "name_sort", COALESCE("operators"."register_number", '') AS "register_number_sort", COALESCE("operators"."register_series", '') AS "register_series_sort", COALESCE("operators"."inn", '') AS "inn_sort", COALESCE("operators"."ogrn", '') AS "ogrn_sort", COALESCE("addresses"."joint_address", '') AS "joint_address_sort", "operators"."company_id" AS "company_id" FROM "operators" LEFT OUTER JOIN "addresses" ON "addresses"."addressable_id" = "operators"."id" AND "addresses"."addressable_type" = 'Operator' WHERE ("operators"."id" >= $start AND "operators"."id" <= $end AND "operators"."delta" = TRUE) GROUP BY "operators"."id", "operators"."name", "operators"."register_number", "operators"."register_series", "operators"."inn", "operators"."ogrn", "addresses"."joint_address", "operators"."id", "operators"."name", "operators"."register_number", "operators"."register_series", "operators"."inn", "operators"."ogrn", "addresses"."joint_address", "operators"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "operators" WHERE "operators"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_string = sphinx_internal_class
  sql_attr_string = name_sort
  sql_attr_string = register_number_sort
  sql_attr_string = register_series_sort
  sql_attr_string = inn_sort
  sql_attr_string = ogrn_sort
  sql_attr_string = joint_address_sort
  sql_query_info = SELECT * FROM "operators" WHERE "id" = (($id - 3) / 7)
}

index operator_delta : operator_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/operator_delta
  source = operator_delta_0
}

index operator
{
  type = distributed
  local = operator_delta
  local = operator_core
}

source task_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "tasks" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "tasks"."id" * 7::INT8 + 4 AS "id" , "users"."login" AS "user", "executers_tasks"."login" AS "executer", "tasks"."body" AS "body", "tasks"."status" AS "status", "tasks"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 4065096731 AS "class_crc", COALESCE('Task', '') AS "sphinx_internal_class", COALESCE("users"."login", '') AS "user_sort", COALESCE("executers_tasks"."login", '') AS "executer_sort", COALESCE("tasks"."body", '') AS "body_sort", COALESCE("tasks"."status", '') AS "status_sort", "tasks"."id" AS "id", "tasks"."user_id" AS "user_id", "tasks"."executer_id" AS "executer_id", "tasks"."bug" AS "bug", cast(floor(extract(epoch from "tasks"."created_at")) as bigint) AS "created_at", cast(floor(extract(epoch from "tasks"."start_date")) as bigint) AS "start_date", cast(floor(extract(epoch from "tasks"."end_date")) as bigint) AS "end_date", CRC32(status) AS "status_crc32" FROM "tasks" LEFT OUTER JOIN "users" ON "users"."id" = "tasks"."user_id" LEFT OUTER JOIN "users" "executers_tasks" ON "executers_tasks"."id" = "tasks"."executer_id" WHERE ("tasks"."id" >= $start AND "tasks"."id" <= $end AND "tasks"."delta" = FALSE) GROUP BY "tasks"."id", "users"."login", "executers_tasks"."login", "tasks"."body", "tasks"."status", "tasks"."id", "users"."login", "executers_tasks"."login", "tasks"."body", "tasks"."status", "tasks"."id", "tasks"."user_id", "tasks"."executer_id", "tasks"."bug", "tasks"."created_at", "tasks"."start_date", "tasks"."end_date"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "tasks" WHERE "tasks"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = id
  sql_attr_uint = user_id
  sql_attr_uint = executer_id
  sql_attr_uint = status_crc32
  sql_attr_bool = bug
  sql_attr_timestamp = created_at
  sql_attr_timestamp = start_date
  sql_attr_timestamp = end_date
  sql_attr_string = sphinx_internal_class
  sql_attr_string = user_sort
  sql_attr_string = executer_sort
  sql_attr_string = body_sort
  sql_attr_string = status_sort
  sql_query_info = SELECT * FROM "tasks" WHERE "id" = (($id - 4) / 7)
}

index task_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/task_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = task_core_0
}

source task_delta_0 : task_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "tasks"."id" * 7::INT8 + 4 AS "id" , "users"."login" AS "user", "executers_tasks"."login" AS "executer", "tasks"."body" AS "body", "tasks"."status" AS "status", "tasks"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 4065096731 AS "class_crc", COALESCE('Task', '') AS "sphinx_internal_class", COALESCE("users"."login", '') AS "user_sort", COALESCE("executers_tasks"."login", '') AS "executer_sort", COALESCE("tasks"."body", '') AS "body_sort", COALESCE("tasks"."status", '') AS "status_sort", "tasks"."id" AS "id", "tasks"."user_id" AS "user_id", "tasks"."executer_id" AS "executer_id", "tasks"."bug" AS "bug", cast(floor(extract(epoch from "tasks"."created_at")) as bigint) AS "created_at", cast(floor(extract(epoch from "tasks"."start_date")) as bigint) AS "start_date", cast(floor(extract(epoch from "tasks"."end_date")) as bigint) AS "end_date", CRC32(status) AS "status_crc32" FROM "tasks" LEFT OUTER JOIN "users" ON "users"."id" = "tasks"."user_id" LEFT OUTER JOIN "users" "executers_tasks" ON "executers_tasks"."id" = "tasks"."executer_id" WHERE ("tasks"."id" >= $start AND "tasks"."id" <= $end AND "tasks"."delta" = TRUE) GROUP BY "tasks"."id", "users"."login", "executers_tasks"."login", "tasks"."body", "tasks"."status", "tasks"."id", "users"."login", "executers_tasks"."login", "tasks"."body", "tasks"."status", "tasks"."id", "tasks"."user_id", "tasks"."executer_id", "tasks"."bug", "tasks"."created_at", "tasks"."start_date", "tasks"."end_date"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "tasks" WHERE "tasks"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = id
  sql_attr_uint = user_id
  sql_attr_uint = executer_id
  sql_attr_uint = status_crc32
  sql_attr_bool = bug
  sql_attr_timestamp = created_at
  sql_attr_timestamp = start_date
  sql_attr_timestamp = end_date
  sql_attr_string = sphinx_internal_class
  sql_attr_string = user_sort
  sql_attr_string = executer_sort
  sql_attr_string = body_sort
  sql_attr_string = status_sort
  sql_query_info = SELECT * FROM "tasks" WHERE "id" = (($id - 4) / 7)
}

index task_delta : task_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/task_delta
  source = task_delta_0
}

index task
{
  type = distributed
  local = task_delta
  local = task_core
}

source tourist_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "tourists" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "tourists"."id" * 7::INT8 + 5 AS "id" , CAST(COALESCE("tourists"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("tourists"."first_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("tourists"."middle_name"::varchar, '') as varchar) AS "full_name", "tourists"."phone_number" AS "phone_number", "addresses"."joint_address" AS "joint_address", "tourists"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 1462552386 AS "class_crc", COALESCE('Tourist', '') AS "sphinx_internal_class", COALESCE("tourists"."last_name", '') || ' ' || COALESCE("tourists"."first_name", '') || ' ' || COALESCE("tourists"."middle_name", '') AS "full_name_sort", COALESCE("tourists"."phone_number", '') AS "phone_number_sort", COALESCE("addresses"."joint_address", '') AS "joint_address_sort", COALESCE("tourists"."passport_series", '0') || ',' || COALESCE("tourists"."passport_number", '0') AS "passport", cast(floor(extract(epoch from "tourists"."passport_valid_until")) as bigint) AS "passport_valid_until", cast(floor(extract(epoch from "tourists"."date_of_birth")) as bigint) AS "date_of_birth", "tourists"."potential" AS "potential", "tourists"."company_id" AS "company_id" FROM "tourists" LEFT OUTER JOIN "addresses" ON "addresses"."addressable_id" = "tourists"."id" AND "addresses"."addressable_type" = 'Tourist' WHERE ("tourists"."id" >= $start AND "tourists"."id" <= $end AND "tourists"."delta" = FALSE) GROUP BY "tourists"."id", "tourists"."last_name", "tourists"."first_name", "tourists"."middle_name", "tourists"."phone_number", "addresses"."joint_address", "tourists"."id", "tourists"."last_name", "tourists"."first_name", "tourists"."middle_name", "tourists"."phone_number", "addresses"."joint_address", "tourists"."passport_series", "tourists"."passport_number", "tourists"."passport_valid_until", "tourists"."date_of_birth", "tourists"."potential", "tourists"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "tourists" WHERE "tourists"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_bool = potential
  sql_attr_timestamp = passport_valid_until
  sql_attr_timestamp = date_of_birth
  sql_attr_multi = uint passport from field
  sql_attr_string = sphinx_internal_class
  sql_attr_string = full_name_sort
  sql_attr_string = phone_number_sort
  sql_attr_string = joint_address_sort
  sql_query_info = SELECT * FROM "tourists" WHERE "id" = (($id - 5) / 7)
}

index tourist_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/tourist_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = tourist_core_0
}

source tourist_delta_0 : tourist_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "tourists"."id" * 7::INT8 + 5 AS "id" , CAST(COALESCE("tourists"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("tourists"."first_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("tourists"."middle_name"::varchar, '') as varchar) AS "full_name", "tourists"."phone_number" AS "phone_number", "addresses"."joint_address" AS "joint_address", "tourists"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 1462552386 AS "class_crc", COALESCE('Tourist', '') AS "sphinx_internal_class", COALESCE("tourists"."last_name", '') || ' ' || COALESCE("tourists"."first_name", '') || ' ' || COALESCE("tourists"."middle_name", '') AS "full_name_sort", COALESCE("tourists"."phone_number", '') AS "phone_number_sort", COALESCE("addresses"."joint_address", '') AS "joint_address_sort", COALESCE("tourists"."passport_series", '0') || ',' || COALESCE("tourists"."passport_number", '0') AS "passport", cast(floor(extract(epoch from "tourists"."passport_valid_until")) as bigint) AS "passport_valid_until", cast(floor(extract(epoch from "tourists"."date_of_birth")) as bigint) AS "date_of_birth", "tourists"."potential" AS "potential", "tourists"."company_id" AS "company_id" FROM "tourists" LEFT OUTER JOIN "addresses" ON "addresses"."addressable_id" = "tourists"."id" AND "addresses"."addressable_type" = 'Tourist' WHERE ("tourists"."id" >= $start AND "tourists"."id" <= $end AND "tourists"."delta" = TRUE) GROUP BY "tourists"."id", "tourists"."last_name", "tourists"."first_name", "tourists"."middle_name", "tourists"."phone_number", "addresses"."joint_address", "tourists"."id", "tourists"."last_name", "tourists"."first_name", "tourists"."middle_name", "tourists"."phone_number", "addresses"."joint_address", "tourists"."passport_series", "tourists"."passport_number", "tourists"."passport_valid_until", "tourists"."date_of_birth", "tourists"."potential", "tourists"."company_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "tourists" WHERE "tourists"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_bool = potential
  sql_attr_timestamp = passport_valid_until
  sql_attr_timestamp = date_of_birth
  sql_attr_multi = uint passport from field
  sql_attr_string = sphinx_internal_class
  sql_attr_string = full_name_sort
  sql_attr_string = phone_number_sort
  sql_attr_string = joint_address_sort
  sql_query_info = SELECT * FROM "tourists" WHERE "id" = (($id - 5) / 7)
}

index tourist_delta : tourist_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/tourist_delta
  source = tourist_delta_0
}

index tourist
{
  type = distributed
  local = tourist_delta
  local = tourist_core
}

source user_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = UPDATE "users" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "users"."id" * 7::INT8 + 6 AS "id" , CAST(COALESCE("users"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("users"."first_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("users"."middle_name"::varchar, '') as varchar) AS "fio", "users"."login" AS "login", "users"."role" AS "role", "users"."email" AS "email", "offices"."name" AS "office", "users"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 765557111 AS "class_crc", COALESCE('User', '') AS "sphinx_internal_class", COALESCE("users"."last_name", '') || ' ' || COALESCE("users"."first_name", '') || ' ' || COALESCE("users"."middle_name", '') AS "fio_sort", COALESCE("users"."login", '') AS "login_sort", COALESCE("users"."role", '') AS "role_sort", COALESCE("users"."email", '') AS "email_sort", COALESCE("offices"."name", '') AS "office_sort", "users"."company_id" AS "company_id", "users"."office_id" AS "office_id" FROM "users" LEFT OUTER JOIN "offices" ON "offices"."id" = "users"."office_id" WHERE ("users"."id" >= $start AND "users"."id" <= $end AND "users"."delta" = FALSE) GROUP BY "users"."id", "users"."last_name", "users"."first_name", "users"."middle_name", "users"."login", "users"."role", "users"."email", "offices"."name", "users"."id", "users"."last_name", "users"."first_name", "users"."middle_name", "users"."login", "users"."role", "users"."email", "offices"."name", "users"."company_id", "users"."office_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "users" WHERE "users"."delta" = FALSE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_uint = office_id
  sql_attr_string = sphinx_internal_class
  sql_attr_string = fio_sort
  sql_attr_string = login_sort
  sql_attr_string = role_sort
  sql_attr_string = email_sort
  sql_attr_string = office_sort
  sql_query_info = SELECT * FROM "users" WHERE "id" = (($id - 6) / 7)
}

index user_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/user_core
  morphology = stem_en, stem_ru
  charset_type = utf-8
  charset_table = 0..9, a..z, _, @, A..Z->a..z, U+410..U+42F->U+430..U+44F, U+430..U+458, U+0022, U+0026, U+0027, U+42F, U+44F, U+043B, U+041B, U+0456, U+0457, U+0406, U+0407, U+400..U+4FF
  min_infix_len = 1
  enable_star = 1
  source = user_core_0
}

source user_delta_0 : user_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = 
  sql_pass = 
  sql_db = devmen_tourism_test
  sql_query_pre = 
  sql_query_pre = SET TIME ZONE 'UTC'
  sql_query = SELECT "users"."id" * 7::INT8 + 6 AS "id" , CAST(COALESCE("users"."last_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("users"."first_name"::varchar, '') as varchar) || ' ' || CAST(COALESCE("users"."middle_name"::varchar, '') as varchar) AS "fio", "users"."login" AS "login", "users"."role" AS "role", "users"."email" AS "email", "offices"."name" AS "office", "users"."id" AS "sphinx_internal_id", 0 AS "sphinx_deleted", 765557111 AS "class_crc", COALESCE('User', '') AS "sphinx_internal_class", COALESCE("users"."last_name", '') || ' ' || COALESCE("users"."first_name", '') || ' ' || COALESCE("users"."middle_name", '') AS "fio_sort", COALESCE("users"."login", '') AS "login_sort", COALESCE("users"."role", '') AS "role_sort", COALESCE("users"."email", '') AS "email_sort", COALESCE("offices"."name", '') AS "office_sort", "users"."company_id" AS "company_id", "users"."office_id" AS "office_id" FROM "users" LEFT OUTER JOIN "offices" ON "offices"."id" = "users"."office_id" WHERE ("users"."id" >= $start AND "users"."id" <= $end AND "users"."delta" = TRUE) GROUP BY "users"."id", "users"."last_name", "users"."first_name", "users"."middle_name", "users"."login", "users"."role", "users"."email", "offices"."name", "users"."id", "users"."last_name", "users"."first_name", "users"."middle_name", "users"."login", "users"."role", "users"."email", "offices"."name", "users"."company_id", "users"."office_id"
  sql_query_range = SELECT COALESCE(MIN("id"), 1::bigint), COALESCE(MAX("id"), 1::bigint) FROM "users" WHERE "users"."delta" = TRUE
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = class_crc
  sql_attr_uint = company_id
  sql_attr_uint = office_id
  sql_attr_string = sphinx_internal_class
  sql_attr_string = fio_sort
  sql_attr_string = login_sort
  sql_attr_string = role_sort
  sql_attr_string = email_sort
  sql_attr_string = office_sort
  sql_query_info = SELECT * FROM "users" WHERE "id" = (($id - 6) / 7)
}

index user_delta : user_core
{
  path = /home/zammer/workspace/devmen_tourism/db/sphinx/test/user_delta
  source = user_delta_0
}

index user
{
  type = distributed
  local = user_delta
  local = user_core
}
