#payments_out.form_block.green_block{ :class => large_width? && 'payment_operator' }
  .block_title
    %h2= t('.payments_out')
  .form_block_content
    - ind = 0
    = f.fields_for :payments_out, :highlight_only => [:amount] do |pof|
      - payment_out = pof.object
      .fake_row.fields{ :id => "payment_out_#{ind}", :class => payment_out.new_record? && 'new_record' }
        .two_line
          %p= pof.label :date_in, t('.date')
          = pof.text_field :date_in, :class => 'datepicker date_in date', :value => l(payment_out.date_in, :format => :long), :disabled => claim.new_record?, :not_highlighted => true
        .two_line
          %p= pof.label :amount, t('.paid')
          - if small_width? or medium_width?
            = pof.text_field :amount, :class => 'amount paid', :disabled => claim.new_record?
          - elsif large_width?
            = pof.text_field :amount, :class => 'amount date', :disabled => claim.new_record?
          %label= t('rur')
        .two_line.big_select
          %p= pof.label :course, t('.course')
          = pof.text_field :course, :class => 'course date', :disabled => claim.new_record?, :not_highlighted => true
        .two_line
          %p= pof.label :amount_prim, t('.paid')
          = pof.text_field :amount_prim, :class => 'amount_prim paid', :disabled => claim.new_record?, :not_highlighted => true
          %label.operator_currency= t(claim.operator_price_currency.upcase)
          -# pof.select :currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }, {}, :class => 'currency', :disabled => true
        .two_line.big_select
          %p= pof.label :form, t('.paid_type')
          = pof.select :form, current_company.dropdown_for('form').collect {|o| [ o.value, o.value ]}, {},
              :class => 'payment_form big_payment_select', :not_highlighted => true, :disabled => claim.new_record?
          - if is_admin? or is_boss? or is_accountant?
            = pof.label :approved, '&nbsp;'.html_safe, :class => 'checkbox', :title => Payment.human_attribute_name(:approved)
            = pof.check_box :approved, :class => 'approved' #, :disabled => (!is_admin? and !is_boss? and !is_accountant?)
          = link_to '', '#', :class => 'delete', :id => "del#{ind}" unless payment_out.new_record?
        = pof.hidden_field :id

    - content_for(:po_last_fields) do
      .two_line
        - if small_width?
          = f.label :operator_maturity
        - else
          %p= f.label :operator_maturity
        = f.text_field :operator_maturity, :class => 'datepicker date', :value => l(claim.operator_maturity, :format => :long),
            :not_highlighted => true
      .two_line.small_margin
        - if small_width?
          = f.label :operator_price
        - else
          %p= f.label :operator_price
        = f.text_field :operator_price, :class => 'number_visas'
        = f.select :operator_price_currency, (CurrencyCourse::CURRENCIES).collect { |o| [t(o.upcase), o] }, {},
            :class => 'price_select', :not_highlighted => true, :disabled => !claim.new_record?
      .two_line.error
        - if small_width?
          = f.label :operator_debt, t('.operator_debt_short')
        - else
          %p= f.label :operator_debt
        = f.text_field :operator_debt, :disabled => true, :class => 'credit text_right'
        %label.operator_currency.operator_debt_currency= t(claim.operator_price_currency.upcase)

    - if small_width? or medium_width?
      .fake_row.add_row.add_paying
        .add_btn.paying
          - if claim.new_record?
            %span{ :class => 'add_tourist', :title => t('.save_before_pay') }= t('.add_another_payment')
          - else
            = link_to t('.add_another_payment'), '#', :class => 'add add_tourist'
        = yield :po_last_fields

    - elsif large_width?
      .fake_row.add_row.add_paying
        .add_btn.paying
          - if claim.new_record?
            %span{ :class => 'add_tourist', :title => t('.save_before_pay') }= t('.add_another_payment')
          - else
            = link_to t('.add_another_payment'), '#', :class => 'add add_tourist'
      .fake_row.add_paying
        = yield :po_last_fields

    - ind += 1