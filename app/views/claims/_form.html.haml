- claim = f.object
- content_for(:error_messages) do
  = f.error_messages

%fieldset.filter
  .filter_row
    = f.label :id
    = f.text_field :id, :disabled => true, :value => (claim.new_record? ? Claim.next_id : claim.id), :class => 'number'
    - if small_width?
      = f.label :operator_confirmation, t('.operator_confirmation_two_line').html_safe, :class => 'two_row',
          :title => t('.operator_confirmation'), :required => claim.operator_confirmation_flag,
          :data => { :required_title => I18n.t('required_field') }
    - else
      = f.label :operator_confirmation, :required => claim.operator_confirmation_flag, :data => { :required_title => I18n.t('required_field') }
    = f.text_field :operator_confirmation, :class => 'confirmation ' << (claim.operator_confirmation_flag ? 'blue_back' : 'red_back'),
        :required => claim.operator_confirmation_flag, :data => { :errors_text => 'false' }
    = f.label :operator_confirmation_flag, '&nbsp;'.html_safe, :class => 'checkbox'
    = f.check_box :operator_confirmation_flag

    .float_right
      = f.hidden_field :visa
      = f.label :visa_check
      = f.text_field :visa_check, :class => 'visa datepicker ' << color_for_visa(claim), :value => l(claim.visa_check, :format => :long),
          :disabled => !claim.visa_confirmation_flag
      = select_tag '', options_for_select(Claim::VISA_STATUSES.map {|s| [ t("claims.visa_statuses.#{s}"), s ]}, claim.visa),
          :id => 'claim_visa_status', :class => 'visa_status', :disabled => !claim.visa_confirmation_flag
      = f.label :visa_confirmation_flag, '&nbsp;'.html_safe, :class => 'checkbox'
      = f.check_box :visa_confirmation_flag
      - if small_width?
        = f.label :check_date, t('.check_date_two_line').html_safe, :class => 'two_row',
            :title => t('.check_date')
      - else
        = f.label :check_date
      = f.text_field :check_date, :class => 'visa datepicker ' << check_date_status(claim), :value => l(claim.check_date, :format => :long)
      = f.label :closed, '&nbsp;'.html_safe, :class => 'checkbox'
      = f.check_box :closed
      - if medium_width? or large_width?
        = f.label :reservation_date
        = f.text_field :reservation_date, :class => 'visa datepicker', :value => l(claim.reservation_date, :format => :long)

  .filter_row
    - if small_width?
      = f.label :reservation_date, t('.reservation_date_two_line').html_safe, :class => 'two_row',
          :title => t('.reservation_date')
      = f.text_field :reservation_date, :class => 'visa datepicker', :value => l(claim.reservation_date, :format => :long)
    = f.label :user_id, t('.user'), :required => false
    - if is_admin? or is_boss?
      = f.select :user_id, current_company.users.map {|o| [ o.name_for_list, o.id ]}, {:include_blank => claim.user.nil?},
          :class => 'filter_select'
    - else
      = f.text_field :user_id, :value => claim.user.try(:first_last_name), :disabled => true

    = f.label :office_id, t('.office'), :required => false
    - if is_admin? or is_boss?
      = f.select :office_id, current_company.offices.map {|o| [ o.name, o.id ]}, {:include_blank => claim.office.nil?},
          :class => 'filter_select'
    - else
      = f.text_field :office_id, :value => claim.office.try(:name), :disabled => true

    .float_right
      - if small_width?
        = f.label :early_reservation, t('.early_reservation_two_line').html_safe, :class => 'checkbox right_checkbox two_row',
            :title => t('.early_reservation')
      - else
        = f.label :early_reservation, :class => 'checkbox right_checkbox'
      = f.check_box :early_reservation
      = f.label :canceled, :class => 'checkbox right_checkbox'
      = f.check_box :canceled

%fieldset.check_list
  %ul
    %li{ :class => !claim.has_tourist_debt? && 'checked' }
      = t('.tourist_debt')
      %span= claim.tourist_debt? ? t('yep') : t('nope')
    %li{ :class => !claim.operator_debt? && 'checked' }
      = t('.operator_debt')
      %span= claim.has_operator_debt? ? t('yep') : t('nope')
    %li{ :class => claim.documents_ready? && 'checked' }
      = t('.documents_ready')
      %span= claim.documents_ready? ? t('yep') : t('nope')
    %li{ :class => claim.has_memo? && 'checked' }
      = t('.has_notes')
      %span= claim.has_memo? ? t('yep') : t('nope')

- if small_width?
  %fieldset.form_column
    = render :partial => 'tourists', :locals => { :f => f, :claim => claim }
    = render :partial => 'route', :locals => { :f => f, :claim => claim }
    = render :partial => 'flights', :locals => { :f => f, :claim => claim }
    = render :partial => 'tour_price', :locals => { :f => f, :claim => claim }
    = render :partial => 'payments_in', :locals => { :f => f, :claim => claim }
    = render :partial => 'payments_out', :locals => { :f => f, :claim => claim }
    = render :partial => 'information', :locals => { :f => f, :claim => claim }

- elsif medium_width?
  %fieldset.form_column
    = render :partial => 'tourists', :locals => { :f => f, :claim => claim }
    = render :partial => 'flights', :locals => { :f => f, :claim => claim }
    = render :partial => 'payments_in', :locals => { :f => f, :claim => claim }
    = render :partial => 'information', :locals => { :f => f, :claim => claim }

  %fieldset.form_column.small
    = render :partial => 'route', :locals => { :f => f, :claim => claim }
    = render :partial => 'tour_price', :locals => { :f => f, :claim => claim }
    = render :partial => 'payments_out', :locals => { :f => f, :claim => claim }

- elsif large_width?
  = render :partial => 'information', :locals => { :f => f, :claim => claim }
  %fieldset.form_column
    = render :partial => 'tourists', :locals => { :f => f, :claim => claim }
    = render :partial => 'tour_price', :locals => { :f => f, :claim => claim }
  = render :partial => 'route', :locals => { :f => f, :claim => claim }
  = render :partial => 'flights', :locals => { :f => f, :claim => claim }
  = render :partial => 'payments_in', :locals => { :f => f, :claim => claim }
  = render :partial => 'payments_out', :locals => { :f => f, :claim => claim }
          %table#tour_price{ :style => 'float:none'}
            %tr
              %th{ :colspan => 3 }
                = f.label :tour_price
              %th{ :colspan => 2 }
                = f.label :visa_price
              %td= f.label :visa_count
              %th{ :colspan => 2 }
                = f.label :children_visa_price
              %td= f.label :visa_count
            %tr{ :class => 'countable' }
              %td= f.text_field :tour_price, :class => 'red'
              %td{ :colspan => 2 }
                = f.select :tour_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td.amount= f.text_field :visa_price
              %td= f.select :visa_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td= f.select :visa_count, (0..30).to_a
              %td.amount= f.text_field :children_visa_price
              %td= f.select :children_visa_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td= f.select :children_visa_count, (0..30).to_a
            %tr
              %th{ :colspan => 3 }
                = f.label :insurance_price
              %th{ :colspan => 3 }
                = f.label :additional_insurance_price
              %th{ :colspan => 3 }
                = f.label :fuel_tax_price
            %tr{ :class => 'countable' }
              %td.amount= f.text_field :insurance_price
              %td= f.select :insurance_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td= f.select :insurance_count, (0..30).to_a
              %td.amount= f.text_field :additional_insurance_price
              %td= f.select :additional_insurance_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td= f.select :additional_insurance_count, (0..30).to_a
              %td.amount= f.text_field :fuel_tax_price
              %td= f.select :fuel_tax_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td= f.select :fuel_tax_count, (0..30).to_a
            %tr{ :class => 'countable' }
              %th{ :colspan => 6, :style => 'text-align:right; padding-right:6px;' }
                = f.label :additional_services_price
              %td.amount= f.text_field :additional_services_price
              %td= f.select :additional_services_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
              %td
            %tr
              %td{ :colspan => 9 }
                %br
            %tr
              %th{ :colspan => 9 }
                = f.label :primary_currency_price
            %tr
              %td.amount= f.text_field :primary_currency_price, :class => 'red'
              %td{ :colspan => 8 }
                = text_field_tag :price_as_string,
                  @claim.primary_currency_price.try(:amount_in_word, CurrencyCourse::PRIMARY_CURRENCY), :class => 'red', :disabled => true
            %tr
              %th{ :colspan => 9 }
                = f.label :calculation
            %tr
              %td{ :colspan => 9 }
                = f.text_area :calculation, :rows => 4

    #payments_block
      .data_block
        %h2= t('.payments_in')
        %table#payments_in
          %tr
            %td{ :colspan => 2}
              = f.label :maturity
            %td.datepicker= f.text_field :maturity, :class => 'datepicker', :value => l(@claim.maturity, :format => :long)
            %td
          %tr.header
            %th{ :style => 'width:12px;' }
            %th= t('.date')
            %th= t('.paid')
            %th= t('.currency')
            %th= t('.paid_in_word')
            %th= t('.paid_type')
          - ind = 0
          = f.fields_for :payments_in do |builder|
            %tr.fields{ :id => "payment_in_#{ind}"}
              %td= builder.check_box :approved, :class => 'approved', :disabled => (!is_admin? and !is_boss? and !is_accountant?)
              %td.datepicker= builder.text_field :date_in, :class => 'datepicker date_in',
                  :value => l(builder.object.date_in, :format => :long)
              %td.amount= builder.text_field :amount, :class => 'amount'
              %td= builder.select :currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }, {}, :class => 'currency', :disabled => true
              %td= builder.text_field :description, :class => 'description', :disabled => true
              %td{ :colspan => 2 }
                = builder.select :form, current_company.dropdown_for('form').collect {|o| [ o.value, o.value ] }, {}, :class => 'payment_form'
              %td= link_to 'X', '#', :class => 'del', :id => "del#{ind}" unless @claim.new_record?
            = builder.hidden_field :id
            - ind += 1
          %tr.footer
            %td{ :colspan => 3}
            %td= f.label :tourist_debt
            %td= f.text_field :tourist_debt, :disabled => true, :class => 'red'
          %tr.bottom
            %td{ :colspan => 5}
              = link_to t('.add_another_payment'), '#', :class => 'add'

        %h2= t('.payments_out')
        %table#payments_out
          %tr
            %td
            %td= f.label :operator_price
            %td.amount= f.text_field :operator_price
            %td= f.select :operator_price_currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] }
            %td{ :colspan => 2 }
              = f.label :operator_maturity
            %td.datepicker= f.text_field :operator_maturity, :class => 'datepicker', :value => l(@claim.operator_maturity, :format => :long)
          %tr.header
            %th{ :style => 'width:12px;' }
            %th= t('.date')
            %th= t('.paid')
            %th= t('.currency')
            %th= t('.course')
            %th.paid= t('.paid') + " (#{@claim.operator_price_currency})"
            %th= t('.paid_type')
          - ind = 0
          = f.fields_for :payments_out do |builder|
            %tr.fields{ :id => "payment_out_#{ind}"}
              %td= builder.check_box :approved, :class => 'approved', :disabled => (!is_admin? and !is_boss? and !is_accountant?),
                :title => Payment.human_attribute_name(:approved)
              %td.datepicker= builder.text_field :date_in, :class => 'datepicker date_in',
                :disabled => @claim.new_record?, :value => l(builder.object.date_in, :format => :long)
              %td.amount= builder.text_field :amount, :class => 'amount', :disabled => @claim.new_record?
              %td= builder.select :currency, (CurrencyCourse::CURRENCIES).collect {|o| [ o.upcase, o ] },
                {}, :class => 'currency', :disabled => true
              %td.amount
                = builder.text_field :course, :class => 'course', :disabled => @claim.new_record?
              %td.amount= builder.text_field :amount_prim, :class => 'amount_prim', :disabled => @claim.new_record?
              %td= builder.select :form, current_company.dropdown_values_for('form'),
                { :disabled => @claim.new_record? }, :class => 'payment_form', :disabled => @claim.new_record?
              %td= link_to 'X', '#', :class => 'del', :id => "del#{ind}" unless @claim.new_record?
            = builder.hidden_field :id
            - ind += 1
          %tr.footer
            %td{ :colspan => 3 }
            %td= f.label :operator_debt
            %td{ :colspan => 2 }= f.text_field :operator_debt, :disabled => true, :class => 'red'
          %tr.bottom
            %td{ :colspan => 6}
              - if @claim.new_record?
                .hint= t('.save_before_pay')
              - else
                = link_to t('.add_another_payment'), '#', :class => 'add'
