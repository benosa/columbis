- user = f.object
- content_for(:error_messages) do
  = f.error_messages
- if user.new_record?
  - pass_label = :password
  - pass_conf_label = :password_confirmation
- else
  - pass_label = t('.new_password')
  - pass_conf_label = t('.new_password_confirmation')
- if current_user && current_company && current_company.offices
  - available_offices = current_user.company.offices.select {|o| !o.default_password.blank? }.map{|o| o.id.to_s }.join(',')
- else
  - available_offices = nil

%fieldset.form_column.form_column-middle.first
  .form_block
    .block_title
      %h2= t('.credentials')
    .form_block_content
      .fake_row.single_row
        %p= f.label :email
        = f.text_field :email, :class => 'type_user', :disabled => !user.new_record? && user != current_user
        %p
          - if user.new_record?
            = f.label t('.login_in_create')
          - else
            = f.label :login
        = f.text_field :login, :class => 'type_user'
        %p= f.label :office_id
        - if is_admin? or is_boss?
          = f.select :office_id, current_user.company.offices.map {|o| [ o.name, o.id ] }
        - else
          = f.text_field :office, :value => user.office.try(:name), :disabled => true
        %p= f.label :role
        - if (is_admin? or is_boss?) and user != current_company.owner
          = f.select :role, current_user.available_roles.map{|r| [t("user.roles.#{r}"), r]}
        - else
          = f.text_field :role, :value => t("user.roles.#{user.role}"), :disabled => true
        - if is_admin?
          %p= f.label :company
          = f.select :company_id, Company.all.map{ |c| [c.name, c.id] }

  .form_block.grey_block
    .block_title
      %h2= t('.view_settings')
    .form_block_content
      .fake_row.single_row
        - available_colors = Hash[User.available_colors]
        - key_method = Hash.respond_to?(:key) ? :key : :index # In ruby 1.8.7 Hash class has no :key method
        %p= t('.color_for_lists')
        .user_color
          = f.text_field :color, 'data-chose_text' => t('.color_chose_text'), 'data-cansel_text' => t('.color_cansel_text'), 'data-pallete' => User.available_colors.map{|c| c[1]}.join(',')
        %p= t('.screen_width')
        = f.select :screen_width, options_for_select(%w(1024 1600 1920).map{|w| [w, w]}, user.try(:screen_width)), include_blank: t('.auto')


%fieldset.form_column.form_column-middle.last
  .form_block
    .block_title
      %h2= t('.personal_data')
    .form_block_content
      .fake_row.single_row.new_user
        %p= f.label :first_name
        = f.text_field :first_name, :class => 'type_user'
        %p= f.label :last_name
        = f.text_field :last_name, :class => 'type_user'
        %p= f.label :middle_name
        = f.text_field :middle_name, :class => 'type_user'
        %p= f.label :phone, :required => true
        = f.text_field :phone_code, :value => "+7", disabled: true, wrapper: false
        = f.text_field :phone, :value => @user.phone.to_s.sub(/\A\+7/, ''), wrapper: false

  .form_block.grey_block
    .block_title
      %h2= t('.create_password')
    .form_block_content
      .fake_row.single_row
        #use_office_block
          %p= f.label :use_office_password, t('.use_office_password'), :class => 'checkbox left_checkbox', :id => "use_office_password_label", :data => t('.if_uncheck'), :checkable_offices => available_offices
          = f.check_box :use_office_password
        #password_block
          %p= f.label pass_label
          = f.password_field :password, :class => 'type_user'
          - if user == current_user
            %p= f.label pass_conf_label
            = f.password_field :password_confirmation, :class => 'type_user'
          - if user.new_record?
            %p= t('.if_not_password')
          - if user == current_user && !user.new_record?
            %p= f.label :current_password
            = f.password_field :current_password, :class => 'type_user'

%fieldset.form_submit{ :style => 'display: none; height: 0;' }
  = f.submit