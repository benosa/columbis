#route.form_block.yellow_block{ :class => large_width? && 'route' }
  .block_title
    %h2= t('.route')
  .form_block_content
    .fake_row.dates
      %p= t('.arrival_date')
      %label= t('.from')
      = f.text_field :arrival_date, :class => 'datepicker date important', :value => l(claim.arrival_date, :format => :long)
      %label= t('.till')
      = f.text_field :departure_date, :class => 'datepicker date important', :value => l(claim.departure_date, :format => :long)
    .fake_row{ :class => large_width? && 'margin_small' }
      .two_line
        %p
          %label.required{ :for => 'claim_city' }= t('.departure_from_city')
        = f.text_field :city, :value => @claim.city.try(:name), :class => 'autocomplete city flight_from_select', data: ac_data(source: city_autocomplete_claims_path), :not_highlighted => true
        = f.hidden_field :city_id, :value => @claim.city.try(:id)
      .two_line
        %p= f.label :operator_id, t('.operator')
        = f.text_field :operator, :value => @claim.operator.try(:name), :class => 'autocomplete operator tour_operator_select', data: ac_data(source: operator_autocomplete_claims_path), :not_highlighted => true
        = f.hidden_field :operator_id, :value => @claim.operator.try(:id)
      .two_line
        %p= f.label :country, t('.direction'), :required => true
        = f.fields_for :country, @claim.country do |cf|
          = cf.text_field :name, :class => 'autocomplete country', :data => { :id => @claim.country_id, :val => cf.object.try(:name) }.merge(ac_data(source: country_autocomplete_claims_path)), :not_highlighted => true
        -# f.select :country_id, current_company.countries.collect {|o| [ o.name, o.id ] }, {}, :class => 'country editable-select route_select', :not_highlighted => true
      .two_line
        %p= f.label :resort, :required => true
        .last
          = f.fields_for :resort, @claim.resort do |rf|
            = rf.text_field :name, :class => 'autocomplete resort', data: ac_data(source: resort_autocomplete_claims_path), :not_highlighted => true
          -# f.select :resort_id, current_company.cities.collect {|o| [ o.name, o.id ] }, {}, :class => 'resort editable-select resort_select', :not_highlighted => true
    .fake_row
      .two_line
        %p= f.label :hotel
        = f.text_field :hotel, :class => 'autocomplete hotel color_select', data: ac_data(source: dropdown_autocomplete_claims_path('hotel')), :not_highlighted => true
      .two_line
        %p= f.label :meals
        = f.text_field :meals, :class => 'autocomplete meals food_select', data: ac_data(source: dropdown_autocomplete_claims_path('meals')), :not_highlighted => true
      .two_line
        %p= f.label :placement
        = f.text_field :placement, :class => 'autocomplete placement placement_select', data: ac_data(source: dropdown_autocomplete_claims_path('placement')), :not_highlighted => true
      .two_line
        %p= f.label :medical_insurance
        = f.select :medical_insurance, current_company.dropdown_values_for('medical_insurance'), {},
            :class => 'editable-select medical_insurance_select', :not_highlighted => true
      .two_line
        %p= f.label :nights
        = f.select :nights, (1..30).to_a, {}, :class => 'editable-select nights_select'
    .fake_row
      .two_line
        %p= f.label :transfer
        = f.select :transfer, current_company.dropdown_values_for('transfer'), {}, :class => 'editable-select airline_select',
          :not_highlighted => true
      .two_line
        %p= f.label :service_class
        = f.select :service_class, current_company.dropdown_values_for('service_class'), {},
            :class => 'editable-select medical_insurance_select', :not_highlighted => true
      .two_line
        %p= f.label :relocation
        = f.select :relocation, current_company.dropdown_values_for('relocation'), {}, :class => 'editable-select crossing_select',
          :not_highlighted => true
      .two_line
        %p= f.label :additional_services
        = f.text_field :additional_services, :class => 'additional_services'
    .fake_row
      .two_line
        %p= f.label :memo
        = f.text_field :memo, :class => 'notes blue_input'
        = f.label :memo_tasks_done, :class => 'checkbox right_checkbox'
        = f.check_box :memo_tasks_done